using Gtk 4.0;
using Adw 1;
using AstalWp 0.1;
using AstalBattery 0.1;
using AstalNetwork 0.1;
using AstalNotifd 0.1;
using AstalBluetooth 0.1;
using Kompass 0.1;

template $KompassBarQs: Box {
  orientation: vertical;

  Revealer rev_volume{
    child: Box {
      orientation: vertical;
      spacing: 5;

      LevelBar {
        orientation: vertical;
        inverted: true;
        height-request: 150;
        max-value: 1.5;
        min-value: 0;
        value: bind template.wp as <AstalWp.Wp>.audio as <AstalWp.Audio>.default-speaker as <AstalWp.Endpoint>.volume;
      }

      Image {
        icon-name: bind template.wp as <AstalWp.Wp>.audio as <AstalWp.Audio>.default-speaker as <AstalWp.Endpoint>.volume-icon;
      }
      Separator {}
    };    
  }

  Box {
    spacing: 5;
    orientation: vertical;
    Popover popover {
      position: right;
      width-request: 400;
      height-request: 500;
      styles ["qs-popup"]
      vexpand: false;

      Box {
        vexpand: true;
        Adw.NavigationView nav_view {

          Adw.NavigationPage {
            tag: "dashboard";
            title: _("Dashboard");
            child: Box {
              orientation: vertical;
              spacing: 5;

              Adw.HeaderBar {
                show-title: false;
                show-end-title-buttons: false;

                [start]
                Box {
                  spacing: 5;
                  Image {
                    icon-name: bind template.battery as <AstalBattery.Device>.icon-name;
                  }

                  Label {
                    label: bind $battery_label(template.battery as <AstalBattery.Device>.percentage) as <string>;
                  }
                }

                [end]
                Box {
                  spacing: 5;
                  Button {
                    icon-name: bind $recorder_icon(template.recorder as <Kompass.ScreenRecorder>.recording as <bool>) as <string>;
                    clicked => $record_click();
                    GestureClick {
                      button: 3;
                      pressed => $record_right_click();
                    }
                  }

                  Button {
                    icon-name: "emblem-system-symbolic";
                    clicked => $open_settings();
                  }
                  MenuButton {
                    icon-name: "system-shutdown-symbolic";
                    menu-model: powermenu;
                  }
                }

              }

              Grid {
                row-homogeneous: true;
                column-homogeneous: true;
                row-spacing: 5;
                column-spacing: 5;

                $KompassArrowButton {
                  label: _("Bluetooth");
                  icon: bind $bluetooth_icon_name(template.bluetooth as <AstalBluetooth.Bluetooth>.is-powered) as <string>;
                  active: bind template.bluetooth as <AstalBluetooth.Bluetooth>.is-powered;
                  clicked => $on_bt_clicked();
                  arrow_clicked => $on_bt_arrow_clicked();

                  layout {
                    column: "0";
                    row: "0";
                  }
                }

                $KompassArrowButton {
                  label: _("Audio");
                  icon: bind template.wp as <AstalWp.Wp>.audio as <AstalWp.Audio>.default-speaker as <AstalWp.Endpoint>.volume-icon;
                  inactive: bind template.wp as <AstalWp.Wp>.audio as <AstalWp.Audio>.default-speaker as <AstalWp.Endpoint>.mute;
                  clicked => $on_audio_clicked();
                  arrow_clicked => $on_audio_arrow_clicked();

                  layout {
                    column: "1";
                    row: "0";
                  }
                }

                $KompassArrowButton {
                  label: _("Notifications");
                  icon: bind $notification_dnd_icon(template.notifd as <AstalNotifd.Notifd>.dont-disturb) as <string>;
                  inactive: bind template.notifd as <AstalNotifd.Notifd>.dont-disturb;
                  clicked => $on_notif_clicked();
                  arrow_clicked => $on_notif_arrow_clicked();


                  layout {
                    column: "0";
                    row: "1";
                  }
                }

                $KompassArrowButton {
                  label: _("Wifi");
                  subtitle: bind template.network as <AstalNetwork.Network>.wifi as <AstalNetwork.Wifi>.ssid;
                  icon: bind template.network as <AstalNetwork.Network>.wifi as <AstalNetwork.Wifi>.icon-name;
                  active: bind template.network as <AstalNetwork.Network>.wifi as <AstalNetwork.Wifi>.enabled;
                  clicked => $on_wifi_clicked();
                  arrow_clicked => $on_wifi_arrow_clicked();

                  layout {
                    column: "1";
                    row: "1";
                  }
                }
              }

              Adw.Carousel players {
                spacing: 5;
              }

              Adw.CarouselIndicatorDots {
                carousel: players;
              }

              $KompassCava {
                vexpand: true;
                valign: end;
              }

            };
          }

          Adw.NavigationPage {
            tag: "audio";
            title: _("Audio");
            child: $KompassBarQsAudio {};
          }
 
          Adw.NavigationPage {
            tag: "bluetooth";
            title: _("Bluetooth");
            child: $KompassBarQsBluetooth {};
          }
          
          Adw.NavigationPage {
            tag: "notifications";
            title: _("Notifications");
            child: $KompassBarQsNotif {};
          }
        }
      }
    }

    Image {
      visible: bind $notification_icon_visible(template.notifd as <AstalNotifd.Notifd>.notifications) as <bool>;
      icon-name: "user-available-symbolic";
    }

    Image {
      icon-name: bind template.battery as <AstalBattery.Device>.icon-name;
    }

    Image {
      icon-name: bind template.network as <AstalNetwork.Network>.wifi as <AstalNetwork.Wifi>.icon-name;
    }

    Image {
      icon-name: bind $bluetooth_icon_name(template.bluetooth as <AstalBluetooth.Bluetooth>.is-connected) as <string>;
    }

    Image {
      icon-name: bind template.wp as <AstalWp.Wp>.audio as <AstalWp.Audio>.default-speaker as <AstalWp.Endpoint>.volume-icon;
    }

    GestureClick {
      pressed => $popup();
    }
  }

  EventControllerScroll {
    scroll => $on_scroll();
    flags: vertical;
  }
}

menu powermenu {
  item (_("shutdown"), "pm.shutdown", "system-shutdown-symbolic")
  item (_("reboot"), "pm.reboot", "system-reboot-symbolic")
  item (_("suspend"), "pm.suspend", "weather-clear-night-symbolic")
  item (_("logout"), "pm.logout", "system-log-out-symbolic")
  item (_("lock"), "pm.lock", "system-lock-screen-symbolic")
}
