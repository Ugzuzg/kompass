using Gtk 4.0;
using Adw 1;
using AstalWp 0.1;
using AstalBattery 0.1;
using AstalNetwork 0.1;
using AstalBluetooth 0.1;

template $KompassQs: Box {
  orientation: vertical;

  Popover popover {
    position: right;
    width-request: 400;

    Box {
      Adw.NavigationView nav_view {
       

        Adw.NavigationPage {
          tag: "dashboard";
          title: _("Dashboard");
          child: Box  {
            orientation: vertical;
            Button {
              label: "bluetooth";
              clicked => $push_stack_bt();
            }
            Button {
              label: "audio";
              clicked => $push_stack_audio();
            }
          };
        }

        Adw.NavigationPage {
          tag: "audio";
          title: _("Audio");
          child: $KompassQsAudio {};
        }

        
        Adw.NavigationPage {
          tag: "bluetooth";
          title: _("Bluetooth");
          child: $KompassQsBluetooth {};
        }

      }
    }
  }

  Revealer rev_volume{
    child: Box {
      orientation: vertical;
      spacing: 5;

      LevelBar {
        orientation: vertical;
        inverted: true;
        height-request: 150;
        max-value: 1.5;
        min-value: 0;
        value: bind template.wp as <AstalWp.Wp>.audio as <AstalWp.Audio>.default-speaker as <AstalWp.Endpoint>.volume;
      }

      Image {
        icon-name: bind template.wp as <AstalWp.Wp>.audio as <AstalWp.Audio>.default-speaker as <AstalWp.Endpoint>.volume-icon;
      }
      Separator {}
    };    
  }

  Image {
    icon-name: bind template.battery as <AstalBattery.Device>.icon-name;
  }

  Image {
    icon-name: bind template.network as <AstalNetwork.Network>.wifi as <AstalNetwork.Wifi>.icon-name;
  }

  Image {
    icon-name: bind $bluetooth_icon_name(template.bluetooth as <AstalBluetooth.Bluetooth>.is-connected) as <string>;
  }

  Image {
    icon-name: bind template.wp as <AstalWp.Wp>.audio as <AstalWp.Audio>.default-speaker as <AstalWp.Endpoint>.volume-icon;
  }

  GestureClick {
    pressed => $popup();
  }

  EventControllerScroll {
    scroll => $on_scroll();
    flags: vertical;
  }

}
